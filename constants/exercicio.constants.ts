// constants/exercicio.constants.ts
export const EXERCICIO_CONSTANTS = {
  INTERVALO_PADRAO_SERIE: 90, // segundos
  INTERVALO_PADRAO_EXERCICIO: 120, // segundos
  DEBOUNCE_HISTORICO: 1000, // ms
  LIMITE_HISTORICO: 1,
  
  // ‚úÖ Constantes de hist√≥rico
  LIMITE_SESSOES_HISTORICO: 3, // Quantas sess√µes mostrar no hist√≥rico
  MINIMO_EXECUCOES_PARA_HISTORICO: 1, // M√≠nimo de execu√ß√µes para mostrar √≠cone hist√≥rico
} as const;

export const MENSAGENS = {
  CARREGANDO: 'Carregando exerc√≠cios...',
  NENHUMA_SERIE_EXECUTADA: 'Nenhuma s√©rie foi executada! Execute pelo menos uma s√©rie antes de finalizar.',
  ERRO_CARREGAR_EXERCICIOS: 'Erro ao carregar exerc√≠cios',
  ERRO_SALVAR_SESSAO: 'Erro ao salvar sess√£o',
  ERRO_SALVAR_SERIES: 'Erro ao salvar s√©ries',
  SUCESSO_SESSAO: 'Sess√£o finalizada com sucesso!',
  SEM_HISTORICO: 'Nenhum hist√≥rico encontrado para este exerc√≠cio.',
  
  // ‚úÖ Mensagens de hist√≥rico
  TITULO_HISTORICO: 'Hist√≥rico',
  ATE_FALHA: 'at√© falha',
  SUGESTAO_HOJE: 'Sugest√£o para hoje:',
  SEM_HISTORICO_TREINO: 'Primeira vez executando este exerc√≠cio neste treino.',
  CARREGANDO_HISTORICO: 'Carregando hist√≥rico...',
  
  // ‚úÖ Mensagens de sess√£o
  CONFIRMAR_SAIDA: 'Tem certeza que deseja sair? O progresso atual ser√° salvo.',
  SESSAO_EM_ANDAMENTO: 'Voc√™ tem uma sess√£o em andamento para este treino.',
  CONTINUAR_SESSAO: 'Deseja continuar a sess√£o anterior ou iniciar uma nova?',
  TREINO_COMPLETO: 'Todas as sess√µes deste treino foram conclu√≠das',
  ESCOLHER_SESSAO: 'Voc√™ tem m√∫ltiplas sess√µes em andamento. Escolha qual continuar:',
  NENHUMA_SESSAO_DISPONIVEL: 'Nenhuma sess√£o dispon√≠vel para este treino',
  ERRO_INICIAR_SESSAO: 'N√£o foi poss√≠vel iniciar a sess√£o de treino',
  ERRO_INICIAR_TREINO: 'Erro inesperado ao iniciar treino',
  ERRO_NOVA_SESSAO: 'Erro inesperado ao iniciar nova sess√£o',
} as const;

// ‚úÖ Constantes de formata√ß√£o do hist√≥rico
export const HISTORICO_FORMAT = {
  PESO_CORPORAL: 'Corporal',
  ICONE_DROPSET: 'üî•',
  ICONE_COMBINADA: 'üîó',
  ICONE_PROGRESSO_POSITIVO: 'üü¢',
  ICONE_PROGRESSO_NEUTRO: 'üü°',
  ICONE_PROGRESSO_NEGATIVO: 'üî¥',
  ICONE_SESSAO_BASE: '‚ö™',
  ICONE_HISTORICO: 'stats-chart-outline', // √çcone do hist√≥rico (gr√°fico de estat√≠sticas)
  ICONE_DETALHES: 'information-circle-outline', // √çcone dos detalhes
  COR_ICONES: '#3B82F6', // ‚úÖ NOVO - Cor padr√£o dos √≠cones (azul)
  SETA_DROPSET: '‚Üí',
  SETA_PROGRESSO: '‚Üó',
  SEPARADOR_COMBINADA: '+',
  SEPARADOR_SERIES: ', ',
} as const;

// ‚úÖ Templates de formata√ß√£o
export const HISTORICO_TEMPLATES = {
  SERIE_SIMPLES: '{reps}√ó{carga}kg',
  SERIE_CORPORAL: '{reps}√óCorporal',
  SERIE_DROPSET: '{reps}√ó{carga}kg ‚Üí üî• {cargaDropset}kg (at√© falha)',
  SERIE_COMBINADA: 'üîó {reps1}√ó{carga1}kg + {reps2}√ó{peso2}',
  PROGRESSO_POSITIVO: '+{diferenca}kg ‚Üó',
  PROGRESSO_NEGATIVO: '-{diferenca}kg ‚Üò',
} as const;

// ‚úÖ Regras de exibi√ß√£o dos √≠cones
export const ICONES_RULES = {
  // √çcone de detalhes sempre aparece
  DETALHES_SEMPRE_VISIVEL: true,
  
  // √çcone de hist√≥rico s√≥ aparece se houver execu√ß√µes anteriores
  HISTORICO_APENAS_COM_DADOS: true,
  
  // Hist√≥rico √© espec√≠fico por treino (n√£o geral do exerc√≠cio)
  HISTORICO_POR_TREINO: true,
  
  // Query deve filtrar: mesmo exerc√≠cio + mesmo treino + mesmo aluno
  HISTORICO_FILTROS: ['exercicio_nome', 'treino_id', 'aluno_id'],
} as const;

// ‚úÖ Status das sess√µes de execu√ß√£o
export const SESSAO_STATUS = {
  NAO_INICIADA: 'nao_iniciada',    // Status inicial na cria√ß√£o da rotina
  EM_ANDAMENTO: 'em_andamento',    // Quando o treino √© iniciado na sele√ß√£o
  CONCLUIDA: 'concluida'           // Quando a sess√£o √© finalizada
} as const;

// ‚úÖ Fluxo de status das sess√µes
export const SESSAO_FLUXO = {
  // 1. Cria√ß√£o da rotina ‚Üí Todas as sess√µes nascem como 'nao_iniciada'
  // 2. Sele√ß√£o do treino ‚Üí Sess√£o espec√≠fica vira 'em_andamento'
  // 3. Finaliza√ß√£o ‚Üí Sess√£o vira 'concluida'
  
  INICIAL: SESSAO_STATUS.NAO_INICIADA,      // Na cria√ß√£o da rotina
  EXECUCAO: SESSAO_STATUS.EM_ANDAMENTO,     // Na sele√ß√£o do treino
  FINAL: SESSAO_STATUS.CONCLUIDA            // Na finaliza√ß√£o
} as const;

// ‚úÖ Cen√°rios de sele√ß√£o de treino
export const CENARIOS_SELECAO = {
  // Cen√°rio 1: Nenhuma sess√£o em andamento + Tem sess√µes dispon√≠veis
  NOVO_TREINO: {
    em_andamento: 0,
    nao_iniciada: '>0',
    acao: 'Iniciar nova sess√£o diretamente'
  },
  
  // Cen√°rio 2: Uma sess√£o em andamento + Tem sess√µes dispon√≠veis
  CONTINUAR_OU_NOVA: {
    em_andamento: 1,
    nao_iniciada: '>0',
    acao: 'Modal: Continuar sess√£o ou criar nova'
  },
  
  // Cen√°rio 3: Uma sess√£o em andamento + Zero sess√µes dispon√≠veis
  CONTINUAR_UNICA: {
    em_andamento: 1,
    nao_iniciada: 0,
    acao: 'Ir direto para sess√£o em andamento'
  },
  
  // Cen√°rio 4: M√∫ltiplas sess√µes em andamento + Zero sess√µes dispon√≠veis
  ESCOLHER_SESSAO: {
    em_andamento: '>1',
    nao_iniciada: 0,
    acao: 'Modal: Lista de sess√µes para escolher'
  },
  
  // Cen√°rio 5: Zero sess√µes em andamento + Zero sess√µes dispon√≠veis
  TREINO_COMPLETO: {
    em_andamento: 0,
    nao_iniciada: 0,
    acao: 'Bot√£o desabilitado + Toast informativo'
  }
} as const;

// ‚úÖ Tipos de modal na sele√ß√£o de treino
export const MODAL_TYPES = {
  CONTINUAR_OU_NOVA: 'continuar_ou_nova',     // ConfirmActionModal
  ESCOLHER_SESSAO: 'escolher_sessao'          // Modal customizada
} as const;